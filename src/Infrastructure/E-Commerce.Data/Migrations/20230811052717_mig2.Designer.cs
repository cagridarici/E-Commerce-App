// <auto-generated />
using System;
using E_Commerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Commerce.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230811052717_mig2")]
    partial class mig2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_Commerce.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_email");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_firstname");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("c_lastname");

                    b.Property<short>("Status")
                        .HasColumnType("smallint")
                        .HasColumnName("c_status");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmailAddress = "cagridarici34@icloud.com",
                            FirstName = "cagri",
                            LastName = "darici",
                            Status = (short)1
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressLine1")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ca_addressline1");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ca_addressline2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ca_city");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ca_country");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("ca_customerid");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ca_postalcode");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "0975 Camron Turnpike / Haleighberg 52505",
                            City = "Haleighberg",
                            Country = "Germany",
                            CustomerId = 1,
                            PostalCode = "52505"
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("oi_amount");

                    b.Property<DateTime>("CreateDateUtc")
                        .HasColumnType("datetime2")
                        .HasColumnName("o_createddate");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("o_customerid");

                    b.Property<short>("OrderStatus")
                        .HasColumnType("smallint")
                        .HasColumnName("o_status");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("oi_productid");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 55,
                            CreateDateUtc = new DateTime(2023, 8, 11, 5, 27, 17, 215, DateTimeKind.Utc).AddTicks(1851),
                            CustomerId = 1,
                            OrderStatus = (short)0,
                            ProductId = 1,
                            Status = 0
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("p_categoryid");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.Property<short>("CurrencyId")
                        .HasColumnType("smallint")
                        .HasColumnName("p_currencyid");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("p_name");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("p_unitprice");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Currency = 0,
                            CurrencyId = (short)0,
                            ProductName = "Cam Sürahi",
                            UnitPrice = 155.55m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Currency = 2,
                            CurrencyId = (short)2,
                            ProductName = "Sepet",
                            UnitPrice = 2m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Currency = 1,
                            CurrencyId = (short)1,
                            ProductName = "Bardak",
                            UnitPrice = 1m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Currency = 0,
                            CurrencyId = (short)0,
                            ProductName = "Cam Şişe",
                            UnitPrice = 12m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Currency = 0,
                            CurrencyId = (short)0,
                            ProductName = "Zigon Sehpa",
                            UnitPrice = 254.90m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Currency = 0,
                            CurrencyId = (short)0,
                            ProductName = "Teflon Tava",
                            UnitPrice = 365.55m
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pc_description");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pc_name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Cam porselen ve benzeri maddelerden yapılmış olan eşya çeşitlerine Züccaciye denir.",
                            Name = "Züccaciye"
                        });
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.CustomerAddress", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Order", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Product", b =>
                {
                    b.HasOne("E_Commerce.Domain.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Addresses");
                });

            modelBuilder.Entity("E_Commerce.Domain.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
